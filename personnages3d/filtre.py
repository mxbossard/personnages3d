
"""Ce script est un exemple de matplotlib"""

import numpy as np


def moving_average(x, n, type='simple'):
    """
    compute an n period moving average.

    type is 'simple' | 'exponential'

    """
    x = np.asarray(x)
    if type == 'simple':
        weights = np.ones(n)
    else:
        weights = np.exp(np.linspace(-1., 0., n))

    weights /= weights.sum()

    a = np.convolve(x, weights, mode='full')[:len(x)]
    a[:n] = a[n]
    return a[-1]


if __name__ == '__main__':

    data = [[1.0], [1.12], [1.17], [1.18], [1.26], [1.33], [1.37], [1.4], [1.46],
            [1.49], [1.51], [1.52], [1.53], [1.51], [1.52], [1.52], [1.52], [1.51],
            [1.52], [1.51], [1.51], [1.51], [1.51], [1.52], [1.52], [1.54], [1.56],
            [1.59], [1.64], [1.69], [1.71], [1.73], [1.78], [1.83], [1.88], [1.94],
            [1.96], [2.01], [2.04], [2.1], [2.13], [2.16], [2.2], [2.27], [2.3],
            [2.37], [2.41], [2.46], [2.54], [2.58], [2.64], [2.67], [2.72], [2.76],
            [2.84], [2.89], [2.93], [2.97], [3.03], [3.08], [3.1], [3.15], [3.18],
            [3.24], [3.31], [3.33], [3.37], [3.42], [3.42], [3.44], [3.46], [3.51],
            [3.51], [3.55], [3.59], [3.6], [3.64], [3.63], [3.66], [3.65], [3.66],
            [3.69], [3.69], [3.71], [3.77], [3.76], [3.79], [3.84], [3.86], [3.94],
            [4.0], [4.08], [4.05], [4.11], [4.16], [4.24], [4.27], [4.35], [4.35],
            [4.42], [4.43], [4.47], [4.54], [4.57], [4.62], [4.64], [4.68], [4.74],
            [4.79], [4.84], [4.93], [4.95], [5.08], [5.15], [5.21], [5.25], [5.3],
            [5.35], [5.39], [5.46], [5.55], [5.57], [5.6], [5.7], [5.73], [5.77],
            [5.95], [5.93], [6.06], [6.1], [6.08], [6.13], [6.14], [6.17], [6.25],
            [6.36], [6.44], [6.61], [6.58], [6.59], [6.71], [6.75], [6.78], [6.8],
            [6.85], [6.84], [6.95], [6.9], [7.03], [7.03], [7.12], [7.17], [7.13],
            [7.11], [7.22], [7.25], [7.29], [7.4], [7.42], [7.44], [7.48], [7.46],
            [7.49], [7.39], [7.56], [7.64], [7.6], [7.64], [7.65], [7.63], [7.66],
            [7.6], [7.66], [7.62], [7.54], [7.44], [7.43], [7.38], [7.39], [7.22],
            [7.19], [7.04], [6.97], [6.92], [6.83], [6.83], [6.64], [6.58], [6.52],
            [6.44], [6.24], [6.24], [6.08], [5.99], [5.93], [5.89], [5.74], [5.65],
            [5.6], [5.51], [5.46], [5.39], [5.26], [5.2], [5.08], [4.94], [4.81],
            [4.75], [4.71], [4.66], [4.56], [4.44], [4.39], [4.33], [4.18], [4.15],
            [4.04], [3.96], [3.84], [3.75], [3.65], [3.58], [3.52], [3.46], [3.34],
            [3.29], [3.18], [3.11], [3.01], [2.97], [2.87], [2.79], [2.69], [2.59],
            [2.52], [2.44], [2.39], [2.29], [2.22], [2.15], [2.08], [2.03], [1.92],
            [1.82], [1.74], [1.68], [1.62], [1.55], [1.46], [1.42], [1.33], [1.27],
            [1.19], [1.14], [1.08], [1.03], [1.0], [0.93], [0.9], [0.85], [0.81],
            [0.78], [0.77], [0.73], [0.72], [0.69], [0.68], [0.66], [0.66], [0.65],
            [0.64], [0.64], [0.63], [0.63], [0.62], [0.61], [0.59], [0.59], [0.57],
            [0.56], [0.57], [0.56], [0.56], [0.55], [0.61], [0.61], [0.61], [0.61],
            [0.59], [0.61], [0.61], [0.61], [0.59], [0.59], [0.57], [0.55], [0.56],
            [0.56], [0.57], [0.57], [0.6], [0.56], [0.57], [0.57], [0.57], [0.56],
            [0.56], [0.57], [0.58], [0.57], [0.56], [0.55], [0.58], [0.57], [0.75],
            [0.74], [0.56], [0.56], [0.61], [0.55], [0.68], [0.55], [0.93], [0.71],
            [0.7], [0.74], [0.7], [0.69], [0.69], [0.52], [0.69], [0.52], [0.67],
            [0.52], [0.52], [0.52], [0.72], [0.65], [0.7], [0.71], [0.82], [0.93],
            [0.55], [0.74], [0.72], [0.75], [0.57], [0.58], [0.63], [0.63], [0.65],
            [0.69], [0.72], [0.79], [0.82], [0.83], [0.89], [0.94], [0.96], [1.03],
            [1.07], [1.11], [1.13], [1.17], [1.21], [1.23], [1.29], [1.32], [1.36],
            [1.41], [1.46], [1.5], [1.55], [1.58], [1.62], [1.65], [1.72], [1.74],
            [1.78], [1.82], [1.88], [1.91], [1.96], [2.01], [2.06], [2.11], [2.17],
            [2.24], [2.27], [2.31], [2.35], [2.4], [2.45], [2.48], [2.56], [2.59],
            [2.65], [2.68], [2.74], [2.78], [2.83], [2.86], [2.92], [2.98], [3.01],
            [3.1], [3.11], [3.18], [3.24], [3.26], [3.31], [3.42], [3.51], [3.56],
            [3.61], [3.68], [3.67], [3.78], [3.82], [3.83], [3.89], [3.93], [4.03],
            [4.06], [4.11], [4.19], [4.25], [4.27], [4.36], [4.42], [4.48], [4.53],
            [4.6], [4.62], [4.66], [4.76], [4.81], [4.91], [5.04], [4.96], [5.07],
            [5.23], [5.26], [5.33], [5.34], [5.43], [5.43], [5.53], [5.58], [5.61],
            [5.68], [5.72], [5.77], [5.9], [5.95], [6.04], [6.17], [6.15], [6.27],
            [6.21], [6.3], [6.36], [6.39], [6.45], [6.54], [6.7], [6.84], [6.78],
            [6.95], [6.83], [6.91], [6.89], [7.04], [7.22], [7.39], [7.42], [7.38],
            [7.36], [7.38], [7.45], [7.49], [7.51], [7.38], [7.44], [7.43], [7.43],
            [7.37], [7.4], [7.36], [7.43], [7.29], [7.26], [7.12], [7.08], [6.96],
            [6.84], [6.91], [6.78], [6.77], [6.72], [6.63], [6.62], [6.55], [6.51],
            [6.39], [6.26], [6.07], [6.02], [5.87], [5.85], [5.79], [5.74], [5.72],
            [5.63], [5.58], [5.51], [5.47], [5.38], [5.3], [5.25], [5.14], [5.08],
            [5.06], [4.95], [4.98], [4.96], [4.84], [4.83], [4.78], [4.75], [4.69],
            [4.65], [4.54], [4.47], [4.4], [4.35], [4.5], [4.21], [4.14], [4.1],
            [4.01], [3.95], [3.86], [3.74], [3.69], [3.63], [3.58], [3.5], [3.46],
            [3.4], [3.34], [3.27], [3.21], [3.15], [3.02], [2.99], [2.94], [2.85],
            [2.78], [2.7], [2.65], [2.61], [2.54], [2.5], [2.45], [2.4], [2.31],
            [2.24], [2.19], [2.16], [2.09], [2.01], [1.95], [1.91], [1.89], [1.83],
            [1.77], [1.73], [1.7], [1.64], [1.58], [1.52], [1.48], [1.43], [1.4],
            [1.36], [1.34], [1.31], [1.27], [1.27], [1.23], [1.22], [1.2], [1.2],
            [1.29], [1.27], [1.26], [1.3], [1.35], [1.4], [1.42], [1.45], [1.49],
            [1.54], [1.64], [1.69], [1.78], [1.82], [1.88], [1.93], [1.96], [1.98],
            [2.04], [2.1], [2.13], [2.19], [2.26], [2.3], [2.35], [2.42], [2.47],
            [2.52], [2.62], [2.68], [2.71], [2.76], [2.79], [2.8], [2.85], [2.89],
            [2.94], [3.03], [3.1], [3.17], [3.24], [3.25], [3.3], [3.33], [3.37],
            [3.42], [3.45], [3.5], [3.54], [3.59], [3.66], [3.69], [3.78], [3.84],
            [3.87], [3.91], [4.01], [4.02], [4.05], [4.1], [4.18], [4.24], [4.32],
            [4.41], [4.51], [4.54], [4.67], [4.69], [4.7], [4.73], [4.79], [4.87],
            [4.94], [5.07], [5.14], [5.17], [5.22], [5.32], [5.42], [5.49], [5.52],
            [5.59], [5.64], [5.68], [5.79], [5.91], [5.83], [5.92], [5.99], [6.05],
            [6.09], [6.16], [6.23], [6.43], [6.44], [6.51], [6.52], [6.74], [6.65],
            [6.66], [6.62], [6.77], [6.67], [6.84], [6.88], [6.97], [6.87], [6.88],
            [7.01], [7.16], [7.16], [7.31], [7.44], [7.4], [7.47], [7.51], [7.55],
            [7.49], [7.54], [7.61], [7.6], [7.57], [7.5], [7.71], [7.62], [7.53],
            [7.56], [7.53], [7.54], [7.48], [7.49], [7.41], [7.32], [7.22], [7.12],
            [7.1], [7.02], [6.91], [6.9], [6.93], [6.85], [6.8], [6.75], [6.6],
            [6.62], [6.48], [6.35], [6.27], [6.2], [6.09], [6.14], [5.95], [5.89],
            [5.67], [5.62], [5.52], [5.47], [5.39], [5.33], [5.18], [5.11], [5.05],
            [4.92], [4.89], [4.75], [4.71], [4.58], [4.49], [4.39], [4.29], [4.22],
            [4.13], [4.07], [4.0], [3.88], [3.8], [3.75], [3.63], [3.59], [3.52],
            [3.44], [3.34], [3.25], [3.15], [3.06], [3.0], [2.94], [2.83], [2.75],
            [2.65], [2.56], [2.51], [2.44], [2.34], [2.27], [2.21], [2.15], [2.09],
            [2.01], [1.95], [1.89], [1.83], [1.76], [1.68], [1.64], [1.55], [1.46],
            [1.41], [1.34], [1.26], [1.24], [1.15], [1.11], [1.06], [0.99], [0.95],
            [0.9], [0.83], [0.79], [0.75], [0.71], [0.67], [0.6], [0.56], [0.55],
            [0.56], [0.61], [0.53], [2.49], [1000]]

    print(len(data))  # 824

    for i in range(750):
        d = []
        for j in range(10):
            d.append(data[i + j])
        d = np.ravel(d)
        m = moving_average(d, 8, type='simple')

        print(m)
